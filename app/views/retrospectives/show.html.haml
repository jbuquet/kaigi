- if current_user
  %p= "Name: #{current_retro.name}"
  %p= "Link: #{retrospective_link(current_retro)}"

  %form#new_statuses{ 'accept-charset'=> 'UTF-8' }
    %input#start_current_time{ type: :submit, value: 'Start' }
    %input#end_current_time{ type: :submit, value: 'End' }

    #write_stickies_time_section
      %span= 'Time next phase:'
      %input{ name: 'status[minutes]', type: 'number' }
      %input{ name: 'status[seconds]', type: 'number' }
      %input#set_time_next_phase{ type: :submit, value: 'Set' }
    %br

  %h4 Stickies


  .container-stickies
    %ul#stickies
      - current_retro.stickies.each do |sticky|
        %li.sticky.idea.single{ 'data-sticky' => sticky.to_json }
          %ul.sticky-container
          %p= sticky.body
          %i.glyphicon.glyphicon-remove.remove-sticky

      %li.new-sticky.new
        %ul.sticky-container
        %form#new_sticky{ 'accept-charset'=> 'UTF-8' }
          %textarea.sticky-text{ :maxlength => '50', :resize => 'off', :cols => '15', :name => 'sticky[body]', :rows => '6'}


  %h4 Groups
  %form#new_group{ 'accept-charset'=> 'UTF-8' }
    %textarea#group_body{ name: 'group[name]'}

    .actions
      %input{ type: :submit, value: 'Create Group' }

  #groups
    - current_retro.groups.each do |group|
      %span.group.label.label-warning{ 'data-group' => group.to_json }
        #{group.id} #{group.name}
        %i.glyphicon.glyphicon-remove.remove-group

- else
  = form_tag(retrospective_users_path(:retrospective_id => current_retro.public_key),
  :method => :post) do
    = label_tag('userName', 'Name')
    = text_field_tag('user[name]')

    %button= 'Save'
